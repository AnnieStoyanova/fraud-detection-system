version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:13
    container_name: bank_transactions_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Slavovi@2024
      POSTGRES_DB: bankSystem
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      retries: 5

  api:
    build: .
    container_name: bank_transactions_api
    restart: always
    ports:
      - "8080:8081"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bankSystem
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: Slavovi@2024
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: Slavovi@2024
      DB_NAME: bankSystem
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
volumes:
  postgres_data:
